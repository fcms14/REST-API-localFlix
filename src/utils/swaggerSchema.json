{
    "openapi": "3.0.0",
    "info": {
        "title": "REST API Docs",
        "version":  "1.0.0"
    },
    "paths": {
        "/api/user": {
            "get": {
                "summary": "List all Users",
                "tags": ["User"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Users not found"
                    }
                }
            },
            "post": {
                "summary": "Register a user",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": "Milton Nishimoto"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "406": {
                        "description": "Name can't be empty"
                    }
                }
            }
        },
        "/api/user/{userId}": {
            "get": {
                "summary": "Get a single user by the userId",
                "tags": ["User"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "The id of the user",
                    "required": true,
                    "default": "1"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Users not found"
                    },
                    "406": {
                        "description": "User Id can't be empty"
                    }
                }
            },
            "put": {
                "summary": "Update a single user by the userId",
                "tags": ["User"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "The id of the user",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": "Milton Nishimoto"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "406": {
                        "description": "User Id can't be empty"
                    }
                }
            },
            "delete": {
                "summary": "Delete a single user by the userId",
                "tags": ["User"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "description": "The id of the user",
                    "required": true,
                    "default": "1"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "406": {
                        "description": "User Id can't be empty"
                    }
                }
            }
        },
        "/api/customer": {
            "get": {
                "summary": "List all Customers",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/Customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customers not found"
                    }
                }
            },
            "post": {
                "summary": "Register a customer",
                "tags": ["Customer"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "default": "Milton Nishimoto"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "406": {
                        "description": "Name can't be empty"
                    }
                }
            }
        },
        "/api/customer/{customerId}": {
            "get": {
                "summary": "Get a single customer by the customer",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "customerId",
                    "in": "path",
                    "description": "The id of the customer",
                    "required": true,
                    "default": "1"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customers not found"
                    },
                    "406": {
                        "description": "Customer Id can't be empty"
                    }
                }
            },
            "put": {
                "summary": "Update a single customer by the customer",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "customerId",
                    "in": "path",
                    "description": "The id of the customer",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "default": "Milton Nishimoto"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "406": {
                        "description": "Customer Id can't be empty"
                    }
                }
            },
            "delete": {
                "summary": "Delete a single customer by the customerId",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "customerId",
                    "in": "path",
                    "description": "The id of the customer",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "406": {
                        "description": "Customer Id can't be empty"
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "summary": "List all Products",
                "tags": ["Product"],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "default": "books",
                        "required": false
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "default": "description",
                        "required": false
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Filter by method",
                        "default": "renting",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "404": {
                        "description": "Products not found"
                    }
                }
            },
            "post": {
                "summary": "Register a product",
                "tags": ["Product"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "books",
                                            "movies",
                                            "series"
                                        ]
                                    },
                                    "title": {
                                        "type": "string",
                                        "default": "description"
                                    },
                                    "method": {
                                        "type": "string",
                                        "enum": [
                                            "renting",
                                            "selling",
                                            "both"
                                        ]
                                    },
                                    "inventory": {
                                        "type": "integer",
                                        "default": "10"
                                    },
                                    "price": {
                                        "type": "number",
                                        "default": "10.75"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "406": {
                        "description": "Name can't be empty"
                    }
                }
            }
        },
        "/api/product/{productId}": {
            "get": {
                "summary": "Get a single product by the product",
                "tags": ["Product"],
                "parameters": [{
                    "name": "productId",
                    "in": "path",
                    "description": "The id of the product",
                    "required": true,
                    "default": "1"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "404": {
                        "description": "Products not found"
                    },
                    "406": {
                        "description": "Product Id can't be empty"
                    }
                }
            },
            "put": {
                "summary": "Update a single product by the product",
                "tags": ["Product"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "productId",
                    "in": "path",
                    "description": "The id of the product",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "books",
                                            "movies",
                                            "series"
                                        ]
                                    },
                                    "title": {
                                        "type": "string",
                                        "default": "description"
                                    },
                                    "method": {
                                        "type": "string",
                                        "enum": [
                                            "renting",
                                            "selling",
                                            "both"
                                        ]
                                    },
                                    "inventory": {
                                        "type": "integer",
                                        "default": "10"
                                    },
                                    "price": {
                                        "type": "number",
                                        "default": "10.75"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "406": {
                        "description": "Product Id can't be empty"
                    }
                }
            },
            "delete": {
                "summary": "Delete a single product by the productId",
                "tags": ["Product"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "productId",
                    "in": "path",
                    "description": "The id of the product",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "406": {
                        "description": "Product Id can't be empty"
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "summary": "List all Products Log",
                "tags": ["Transactions"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                        "name": "pendingReturn",
                        "in": "query",
                        "description": "Renting pending returns?",
                        "required": false,
                        "default": true,
                        "type": "boolean"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Initial Date",
                        "required": false,
                        "default": "2022-09-01",
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Final Date",
                        "required": false,
                        "default": "2022-11-30",
                        "type": "string"
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Transaction Method",
                        "required": false,
                        "default": "renting",
                        "type": "string",
                        "enum": [
                            "renting",
                            "selling"
                        ]
                    },
                    {
                        "name": "customerName",
                        "in": "query",
                        "description": "Customer Name",
                        "required": false,
                        "default": "Milton",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Procuct Type",
                        "required": false,
                        "default": "movies",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Procuct Title",
                        "required": false,
                        "default": "Interstellar",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "productsLog": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/ProductsLog"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Field can't be empty"
                    }
                }
            },
            "post": {
                "summary": "Register a Product Transaction",
                "tags": ["Transactions"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "productsId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "customersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "method": {
                                        "type": "string",
                                        "default": "selling",
                                        "enum": [
                                            "renting",
                                            "selling"
                                        ]
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "default": 10
                                    },
                                    "returningAt": {
                                        "type": "string",
                                        "default": "2022-12-03"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ProductsLog"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Field can't be empty"
                    }
                }
            },
            "put": {
                "summary": "Register a Returned Product",
                "tags": ["Transactions"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "productsId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "customersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ProductsLog"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Field can't be empty"
                    }
                }
            }
        },
        "/public/api/customer": {
            "post": {
                "summary": "Register a customer",
                "tags": ["Customer"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "default": "Milton Nishimoto"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "406": {
                        "description": "Name can't be empty"
                    }
                }
            }
        },
        "/public/api/customer/{customerId}": {
            "get": {
                "summary": "Get a single customer by the customer",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "customerId",
                    "in": "path",
                    "description": "The id of the customer",
                    "required": true,
                    "default": "1"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customers not found"
                    },
                    "406": {
                        "description": "Customer Id can't be empty"
                    }
                }
            },
            "put": {
                "summary": "Update a single customer by the customer",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "customerId",
                    "in": "path",
                    "description": "The id of the customer",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "default": "Milton Nishimoto"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "406": {
                        "description": "Customer Id can't be empty"
                    }
                }
            },
            "delete": {
                "summary": "Delete a single customer by the customerId",
                "tags": ["Customer"],
                "security": [{"bearerAuth": []}],
                "parameters": [{
                    "name": "customerId",
                    "in": "path",
                    "description": "The id of the customer",
                    "required": true,
                    "default": "1"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "usersId": {
                                        "type": "integer",
                                        "default": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "customer": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "406": {
                        "description": "Customer Id can't be empty"
                    }
                }
            }
        },
        "/public/api/product": {
            "get": {
                "summary": "List all Products",
                "tags": ["Product"],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "default": "books",
                        "required": false
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "default": "description",
                        "required": false
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Filter by method",
                        "default": "renting",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "404": {
                        "description": "Products not found"
                    }
                }
            }
        },
        "/public/api/product/{productId}": {
            "get": {
                "summary": "Get a single product by the product",
                "tags": ["Product"],
                "parameters": [{
                    "name": "productId",
                    "in": "path",
                    "description": "The id of the product",
                    "required": true,
                    "default": "1"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "404": {
                        "description": "Products not found"
                    },
                    "406": {
                        "description": "Product Id can't be empty"
                    }
                }
            }
        },
        "/public/api/transactions": {
            "post": {
                "summary": "Register a Product Transaction",
                "tags": ["Transactions"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "productsId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "customersId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "method": {
                                        "type": "string",
                                        "default": "selling",
                                        "enum": [
                                            "renting",
                                            "selling"
                                        ]
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "default": 10
                                    },
                                    "returningAt": {
                                        "type": "string",
                                        "default": "2022-12-03"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ProductsLog"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Field can't be empty"
                    }
                }
            },
            "put": {
                "summary": "Register a Returned Product",
                "tags": ["Transactions"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "productsId": {
                                        "type": "integer",
                                        "default": "1"
                                    },
                                    "customersId": {
                                        "type": "integer",
                                        "default": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transaction": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ProductsLog"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unhandled error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Field can't be empty"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Milton Nishimoto"
                    },
                    "createdAt": {
                        "type": "string",
                        "default": "2022-10-01T16:21:41.719Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "default": "2022-10-01T16:22:41.719Z"
                    },
                    "deletedAt": {
                        "type": "string",
                        "default": null
                    }
                }
            },
            "Customer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "usersId": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Milton Nishimoto"
                    },
                    "createdAt": {
                        "type": "string",
                        "default": "2022-10-01T16:21:41.719Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "default": "2022-10-01T16:22:41.719Z"
                    },
                    "deletedAt": {
                        "type": "string",
                        "default": null
                    }
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "usersId": {
                        "type": "integer",
                        "default": "1"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "books",
                            "movies",
                            "series"
                        ],
                        "default": "books"
                    },
                    "title": {
                        "type": "string",
                        "default": "description"
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "renting",
                            "selling",
                            "both"
                        ],
                        "default": "selling"
                    },
                    "inventory": {
                        "type": "integer",
                        "default": "10"
                    },
                    "price": {
                        "type": "number",
                        "default": "10.75"
                    },
                    "createdAt": {
                        "type": "string",
                        "default": "2022-10-01T16:21:41.719Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "default": "2022-10-01T16:22:41.719Z"
                    },
                    "deletedAt": {
                        "type": "string",
                        "default": null
                    }
                }
            },
            "ProductsLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "productsId": {
                        "type": "integer",
                        "default": "1"
                    },
                    "quantity": {
                        "type": "integer",
                        "default": "1"
                    },
                    "price": {
                        "type": "number",
                        "default": "10.75"
                    },
                    "createdAt": {
                        "type": "string",
                        "default": "2022-10-01T16:21:41.719Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "default": "2022-10-03T16:22:41.719Z"
                    },
                    "usersId": {
                        "type": "integer",
                        "default": "1"
                    },
                    "customersId": {
                        "type": "integer",
                        "default": "1"
                    },
                    "returningAt": {
                        "type": "string",
                        "default": "2022-10-03T16:22:41.719Z"
                    },
                    "returnedAt": {
                        "type": "string",
                        "default": "2022-10-03T16:22:41.719Z"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
